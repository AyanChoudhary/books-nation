{"version":3,"sources":["components/header.js","components/filter.js","components/searchbar.js","api/axiosInstance.js","components/bookCard.js","components/pagination.js","components/booksList.js","components/loadingSpinner.js","components/chip.js","pages/landing.js","api/booksApi.js","pages/bookInfo.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Filter","props","value","filter","onChange","handleFilter","languageRestriction","handleLanguageRes","Searchbar","defaultProps","sort","onSubmit","handleSort","action","type","placeholder","handleSearch","handleBookTitle","handleAuthorName","handlePublisherName","onClick","axiosInstance","require","create","headers","baseURL","BookCard","publishedYear","book","volumeInfo","hasOwnProperty","publishedDate","substring","averageRating","thumbnail","imageLinks","to","id","src","alt","title","authors","publisher","language","toUpperCase","Pagination","state","pageNumbers","booksPerPage","totalPages","Math","ceil","totalBooks","currentPage","splice","i","handlePaginationNext","bind","handlePaginationPrev","handlePageChange","this","onPageChange","Number","setState","map","key","BooksList","books","length","LoadingSpinner","Chip","handleRemove","LandingPage","e","searchField","target","bookTitle","authorName","publisherName","preventDefault","undefined","handleRequest","handlePage","startIndex","q","isLoading","name","orderValue","get","params","orderBy","langRestrict","then","response","JSON","parse","request","catch","error","Promise","reject","data","items","totalItems","err","alert","searchBook","BookInfo","BookId","match","Book","description","pagecount","saleInfo","category","link","ebook","bookId","pageCount","saleability","categories","accessInfo","webReaderLink","isEbook","href","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.73c61a13.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return(\n            <div className=\"header\">\n                Book<span className=\"nation\">Nation</span>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nconst Filter = (props) => {\n    return(\n        <div className=\"filter\">\n            <span className=\"label\">Filter By:</span>\n            <select className=\"filterBy categoryDropdown\" value={props.filter} onChange={props.handleFilter} >\n                <option value={null}>None</option>\n                <option value=\"full\">Full</option>\n                <option value=\"partial\">Partial</option>\n                <option value=\"ebooks\">eBooks</option>\n                <option value=\"free-ebooks\">Free eBooks</option>\n                <option value=\"paid-ebooks\">Paid eBooks</option>\n            </select>\n            <select\n                className=\"filterBy LanguageDropdown\"\n                value={props.languageRestriction}\n                onChange={props.handleLanguageRes}\n            >\n                <option value={null}>All</option>\n                <option value=\"en\">English</option>\n                <option value=\"fr\">French</option>\n                <option value=\"de\">German</option>\n                <option value=\"hi\">Hindi</option>\n                <option value=\"es\">Spanish</option>\n                <option value=\"ru\">Russian</option>\n            </select>\n        </div>\n    );\n};\n\nexport default Filter;","import React from 'react';\nimport Filter from './filter';\n\nconst Searchbar = (props) => {\n    Searchbar.defaultProps = {\n        sort: \"relevance\"\n    };\n\n    return(\n        <div className=\"searchbar\">\n            <form onSubmit={props.handleSort} action=\"\">\n                <div className=\"field\">\n                    <label className=\"label\">Search By: </label>\n                    <input\n                        type=\"text\"\n                        className=\"searchfield\"\n                        placeholder=\"Search by\"\n                        onChange={props.handleSearch}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\">Book Title: </label>\n                    <input\n                        type=\"text\"\n                        className=\"searchfield\"\n                        placeholder=\"Enter book title\"\n                        onChange={props.handleBookTitle}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\">Author Name: </label>\n                    <input\n                        type=\"text\"\n                        className=\"searchfield\"\n                        placeholder=\"Enter Author name\"\n                        onChange={props.handleAuthorName}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\">Publisher Name: </label>\n                    <input\n                        type=\"text\"\n                        className=\"searchfield\"\n                        placeholder=\"Enter Publisher name\"\n                        onChange={props.handlePublisherName}\n                    />\n                </div>\n                <button type=\"submit\" className=\"button\">Search</button>\n                <div className=\"properties\">\n                    <Filter\n                        handleLanguageRes={props.handleLanguageRes}\n                        handleFilter={props.handleFilter}\n                        filter={props.filter}\n                        languageRestriction={props.languageRestriction}\n                    />\n                    <div className=\"sortBy\" onClick={props.handleSort}>\n                        <span className=\"label\">Sort By:</span>\n                        <button\n                            value=\"relevance\"\n                            className={ `sortButton left-button ${props.sort === \"relevance\" ? 'active': ''}` }\n                        >\n                            Relevance\n                        </button>\n                        <button\n                            value=\"newest\"\n                            className={ `sortButton right-button ${props.sort === \"newest\" ? 'active': ''}` }\n                        >\n                            Newest\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Searchbar;","const axios = require('axios');\nexport const axiosInstance = axios.create({\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    },\n    baseURL: `https://www.googleapis.com/books/v1/volumes`\n});","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst BookCard = (props) => {\n    const publishedYear = !props.book.volumeInfo.hasOwnProperty('publishedDate')\n                          ? props.book.volumeInfo.publishedDate = \"0000\"\n                          : props.book.volumeInfo.publishedDate.substring(0,4);\n    const averageRating = !props.book.volumeInfo.hasOwnProperty('averageRating')\n                          ? props.book.volumeInfo.averageRating = \"1\" : props.book.volumeInfo.averageRating;\n    const thumbnail = !props.book.volumeInfo.hasOwnProperty('imageLinks')\n                      ? 1 : props.book.volumeInfo.imageLinks.thumbnail;\n\n    return(\n        <Link to={`/${props.book.id}`}>\n            <div className=\"bookCard\">\n                <div className=\"bookCard-bookThumbnail\"><img src={thumbnail} alt={props.book.volumeInfo.title} /></div>\n                <div className=\"bookCard-bookInfo\">\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Name: </span>\n                        {props.book.volumeInfo.title}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Authors: </span>\n                        {props.book.volumeInfo.authors}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Publisher: </span>\n                        {props.book.volumeInfo.publisher}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Published Year: </span>\n                        {publishedYear}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Language: </span>\n                        {props.book.volumeInfo.language.toUpperCase()}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Rating: </span>\n                        {averageRating}/5\n                    </div>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport default BookCard;","import React, { Component } from 'react';\n\nclass Pagination extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageNumbers: [1],\n            booksPerPage: 10,\n            totalPages: Math.ceil(props.totalBooks / 10),\n            currentPage: this.props.currentPage\n        };\n\n        this.pageNumbers = [];\n\n        if(this.state.currentPage<5) {\n            this.state.pageNumbers.splice(1, 0, this.state.totalPages);\n            this.state.pageNumbers.splice(1, 0, \"...\");\n            for (let i = 5; i >= 2; i--) {\n                this.state.pageNumbers.splice(1, 0, i);\n            }\n        } else if( this.state.currentPage>(this.state.totalPages-4)) {\n            this.state.pageNumbers.splice(1, 0, this.state.totalPages);\n            for (let i = this.state.totalPages-1; i >= this.state.totalPages-4; i--) {\n                this.state.pageNumbers.splice(1, 0, i);\n            }\n            this.state.pageNumbers.splice(1, 0, \"...\");\n        } else {\n            this.state.pageNumbers.splice(1, 0, this.state.totalPages);\n            this.state.pageNumbers.splice(1, 0, \"...\");\n            for (let i = this.state.currentPage+2; i >= this.state.currentPage-2; i--) {\n                this.state.pageNumbers.splice( 1, 0, i);\n            }\n            this.state.pageNumbers.splice(1, 0, \"...\");\n        }\n\n        this.handlePaginationNext = this.handlePaginationNext.bind(this);\n        this.handlePaginationPrev = this.handlePaginationPrev.bind(this);\n        this.handlePageChange = this.handlePageChange.bind(this);\n    }\n\n    handlePaginationNext () {\n        if(this.state.currentPage<this.state.totalPages) {\n            this.props.onPageChange(this.state.currentPage+1);\n        }\n    }\n\n    handlePaginationPrev () {\n        if(this.state.currentPage>1) {\n            this.props.onPageChange(this.state.currentPage-1);\n        }\n    }\n\n    handlePageChange (Number) {\n        this.setState({ currentPage: Number });\n        this.props.onPageChange(Number);\n    }\n\n    render() {\n        return(\n            <div className=\"pagination\">\n                <div\n                    className={`pagination-prev ${this.state.currentPage <= 1 ? 'isDisabled': '' }`}\n                    onClick={this.handlePaginationPrev}>\n                         Prev\n                </div>\n                <div className=\"pagination-list\">\n                    {this.state.pageNumbers.map(Number => (\n                        <div\n                            key={Number}\n                            className={ `pagination-element ${this.state.currentPage ===  Number  ? 'active': ''}` }\n                            onClick={ ()=> { this.handlePageChange(Number); } }\n                        >\n                            { Number }\n                        </div>\n                    ))}\n                </div>\n                <div\n                    className={`pagination-next ${this.state.currentPage === this.state.totalPages ? 'isDisabled': ''}`}\n                    onClick={this.handlePaginationNext}>\n                        Next\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Pagination;\n","/* eslint-disable react/prop-types */\nimport BookCard from './bookCard';\nimport Pagination from './pagination';\nimport React, { Component } from 'react';\n\nclass BooksList extends Component {\n    render() {\n        return(\n            <div className=\"booklistPage\">\n                <div className=\"bookslist\">\n                    {this.props.books.map((book) => {\n                        return <BookCard key={book} book={book} />;\n                    })}\n                </div>\n                { this.props.books.length ? <Pagination\n                    totalBooks={this.props.totalBooks}\n                    onPageChange={this.props.onPageChange}\n                    currentPage={this.props.currentPage}\n                /> : null}\n            </div>\n        );\n    }\n}\n\nexport default BooksList;","import React from 'react';\n\nconst LoadingSpinner = () => (\n  <div className=\"spinner\">\n    <i className=\"fa fa-spinner fa-pulse\" />\n    <p>Fetching Books...</p>\n  </div>\n);\n\nexport default LoadingSpinner;","import React, { Component } from 'react';\n\nclass Chip extends Component {\n    handleRemove = () => {\n        if(this.props.handleFilter) {\n            this.props.handleFilter();\n        } else if (this.props.handleLanguageRes) {\n            this.props.handleLanguageRes();\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"chip\">\n                <div className=\"filterName\">{this.props.filter}</div>\n                <i className=\"fas fa-times-circle\" value=\"none\" onClick={this.handleRemove} />\n            </div>\n        );\n    }\n}\n\nexport default Chip;\n","import React, { Component } from 'react';\nimport Searchbar from './../components/searchbar';\nimport { getBooks } from '../api/booksApi';\nimport BooksList from '../components/booksList';\nimport LoadingSpinner from '../components/loadingSpinner';\nimport Chip from \"../components/chip\";\n\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            books: [],\n            totalBooks: 0,\n            searchField: '',\n            bookTitle: '',\n            authorName: '',\n            publisherName: '',\n            sort: 'relevance',\n            isLoading: false,\n            filter: null,\n            languageRestriction: null,\n            startIndex: 0,\n            currentPage: 1\n        };\n    }\n\n    handleSearch = (e) => {\n        this.setState({ searchField: e.target.value });\n    }\n\n    handleBookTitle = (e) => {\n        this.setState({ bookTitle: `+intitle:${ e.target.value }` });\n    }\n\n    handleAuthorName = (e) => {\n        this.setState({ authorName: `+inauthor:${ e.target.value }` });\n    }\n\n    handlePublisherName = (e) => {\n        this.setState({ publisherName: `+inpublisher:${ e.target.value }` });\n    }\n\n    handleSort = (e) => {\n        e.preventDefault();\n        if(e.target.value!==undefined) {\n            this.setState({ sort: e.target.value });\n        }\n        this.handleRequest();\n    }\n\n\n    handleFilter = (e) => {\n        if(e==null) {\n            this.setState({ filter: null });\n        } else if(e.target.value!==\"none\") {\n            this.setState({ filter: e.target.value });\n        } else {\n            this.setState({ filter: null });\n        }\n        this.handleRequest();\n    }\n\n    handleLanguageRes = (e) => {\n        if(e!==undefined) {\n            this.setState({ languageRestriction: e.target.value });\n        } else {\n            this.setState({ languageRestriction: null });\n        }\n        this.handleRequest();\n    }\n\n    handlePage = (currentPage) => {\n        this.setState({ startIndex: (currentPage-1)*10, currentPage });\n        this.handleRequest();\n    }\n\n    handleRequest = () => {\n        this.q = this.state.searchField + this.state.bookTitle + this.state.authorName + this.state.publisherName;\n        if(this.state.searchField!=='') {\n            this.setState({ isLoading:true }, () => {\n                getBooks(this.q,\n                    this.state.sort,\n                    this.state.filter,\n                    this.state.languageRestriction,\n                    this.state.startIndex\n                )\n                .then((data) => {\n                    this.setState({ isLoading:false, books: [...data.items], totalBooks: data.totalItems });\n                })\n                .catch( err => {\n                    this.setState({ isLoading:false, currentPage: 1 });\n                    alert(err);\n                });\n            });\n        } else {\n            alert(\"Please input Search Query\");\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"landing\">\n                <Searchbar\n                    searchBook={this.searchBook}\n                    handleSearch={this.handleSearch}\n                    handleBookTitle={this.handleBookTitle}\n                    handleAuthorName={this.handleAuthorName}\n                    handlePublisherName={this.handlePublisherName}\n                    handleSort={this.handleSort}\n                    sort={this.state.sort}\n                    filter={this.state.filter}\n                    languageRestriction={this.state.languageRestriction}\n                    handleFilter={this.handleFilter}\n                    handleLanguageRes={this.handleLanguageRes}\n                />\n                <div className=\"chipComponents\">\n                    { this.state.filter ? <Chip filter={this.state.filter} handleFilter={this.handleFilter} /> : null }\n                    { this.state.languageRestriction ? <Chip\n                        filter={this.state.languageRestriction}\n                        handleLanguageRes={this.handleLanguageRes}\n                    /> : null }\n                </div>\n                {this.state.isLoading ? <LoadingSpinner /> : <BooksList\n                    books={this.state.books}\n                    totalBooks={this.state.totalBooks}\n                    onPageChange={this.handlePage}\n                    currentPage={this.state.currentPage}\n                /> }\n            </div>\n        );\n    }\n}\n\nexport default LandingPage;","import { axiosInstance } from './axiosInstance';\n\nfunction getBooks(name, orderValue, filter, languageRestriction, startIndex) {\n    return axiosInstance.get('', {\n        params: {\n            q: name,\n            orderBy: orderValue,\n            filter,\n            langRestrict: languageRestriction,\n            startIndex\n        }\n    })\n    .then((response) => {\n        const res = JSON.parse(response.request.response);\n        return res;\n    })\n    .catch((error) => {\n        return Promise.reject(error);\n    });\n}\n\nfunction getBookById(bookId) {\n    return axiosInstance.get(`/${bookId}`)\n    .then((response) => {\n        const res = JSON.parse(response.request.response);\n        return res;\n    })\n    .catch((error) => {\n        return Promise.reject(error);\n    });\n}\n\nexport {\n    getBooks,\n    getBookById\n};","import React, { Component } from 'react';\nimport { getBookById } from '../api/booksApi';\n\nclass BookInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            BookId: this.props.match.params.id,\n            isLoading: false,\n            Book: {\n                title: '',\n                authors: [],\n                publisher: '',\n                publishedDate: '',\n                description: '',\n                thumbnail: '',\n                pagecount: '',\n                saleInfo: '',\n                category: '',\n                link: '',\n                ebook: ''\n            }\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: true }, () => {\n            getBookById(this.state.BookId)\n            .then((data) => {\n                this.setState({ \n                    isLoading:false,\n                    Book: {\n                        title: data.volumeInfo.title,\n                        authors: data.volumeInfo.authors,\n                        publisher: data.volumeInfo.publisher,\n                        publishedDate: data.volumeInfo.publishedDate,\n                        description: data.volumeInfo.description,\n                        thumbnail: data.volumeInfo.imageLinks.thumbnail,\n                        pagecount: data.volumeInfo.pageCount,\n                        saleInfo: data.saleInfo.saleability,\n                        category: data.volumeInfo.categories,\n                        link: data.accessInfo.webReaderLink,\n                        ebook: data.saleInfo.saleability.isEbook\n                    }\n                });\n\n            })\n            .catch( err => {\n                this.setState({ isLoading:false });\n                alert(err);\n            });\n        });\n    }\n\n    render() {\n        return(\n            <div className=\"bookInfo\">\n                <div className=\"title\">{this.state.Book.title}</div>\n                <div className=\"bookProperties\">\n                    <div className=\"image\">\n                        <div className=\"thumbnail\">\n                            <img src={this.state.Book.thumbnail} alt={this.state.Book.title} />\n                        </div>\n                        <a className=\"button\" href={this.state.Book.link}>Go to Book</a>\n                    </div>\n                    <div className=\"smallInfo\">\n                        <div className=\"author\">\n                            <span className=\"label\">Authors:</span>\n                            {this.state.Book.authors}\n                        </div>\n                        <div className=\"publisher\">\n                            <span className=\"label\">Publisher:</span>\n                            {this.state.Book.publisher}\n                        </div>\n                        <div className=\"published date\">\n                            <span className=\"label\">Published Date:</span>\n                            {this.state.Book.publishedDate}\n                        </div>\n                        <div className=\"saleinfo\">\n                            <span className=\"label\">Sale Info:</span>\n                            {this.state.Book.saleInfo}\n                        </div>\n                        <div className=\"ebook\">\n                            <span className=\"label\">E-book:</span>\n                            {!this.state.Book.ebook ? 'Not available': 'Available' }\n                        </div>\n                        <div className=\"pagecount\">\n                            <span className=\"label\">Page Count:</span>\n                            {this.state.Book.pagecount}\n                        </div>\n                    </div>\n                </div>\n                <span className=\"descLabel\">About the Book</span>\n                <div className=\"description\">{this.state.Book.description}</div>\n\n            </div>\n        );\n    }\n}\n\nexport default BookInfo;\n","import React from 'react';\nimport { BrowserRouter as Router , Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header';\nimport './styles/main.scss';\nimport LandingPage from './pages/landing';\nimport BookInfo from './pages/bookInfo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={LandingPage} />\n          <Route path=\"/:id\" component={BookInfo} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}