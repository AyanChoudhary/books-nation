{"version":3,"sources":["components/header.js","components/filter.js","components/searchbar.js","api/axiosInstance.js","components/bookCard.js","components/pagination.js","components/booksList.js","components/loadingSpinner.js","components/chip.js","pages/landing.js","api/booksApi.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Filter","props","value","filter","onChange","handleFilter","languageRestriction","handleLanguageRes","Searchbar","defaultProps","sort","onSubmit","handleSort","action","type","placeholder","handleSearch","onClick","axiosInstance","require","create","headers","baseURL","BookCard","publishedYear","book","volumeInfo","hasOwnProperty","publishedDate","substring","averageRating","thumbnail","imageLinks","href","accessInfo","webReaderLink","src","alt","title","authors","publisher","language","toUpperCase","Pagination","state","pageNumbers","totalPages","booksPerPage","Math","ceil","totalBooks","currentPage","i","splice","handlePaginationNext","bind","handlePaginationPrev","handlePageChange","this","onPageChange","Number","setState","map","key","BooksList","books","length","LoadingSpinner","handleRemove","LandingPage","e","searchField","target","preventDefault","undefined","handleRequest","handlePage","startIndex","isLoading","name","orderValue","get","params","q","orderBy","langRestrict","then","response","JSON","parse","request","catch","error","Promise","reject","data","items","totalItems","err","alert","searchBook","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.54dde439.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return(\n            <div className=\"header\">\n                Book<span className=\"nation\">Nation</span>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nconst Filter = (props) => {\n    return(\n        <div className=\"filter\">\n            <span className=\"label\">Filter By:</span>\n            <select className=\"filterBy categoryDropdown\" value={props.filter} onChange={props.handleFilter} >\n                <option value={null}>None</option>\n                <option value=\"full\">Full</option>\n                <option value=\"partial\">Partial</option>\n                <option value=\"ebooks\">eBooks</option>\n                <option value=\"free-ebooks\">Free eBooks</option>\n                <option value=\"paid-ebooks\">Paid eBooks</option>\n            </select>\n            <select\n                className=\"filterBy LanguageDropdown\"\n                value={props.languageRestriction}\n                onChange={props.handleLanguageRes}\n            >\n                <option value={null}>All</option>\n                <option value=\"en\">English</option>\n                <option value=\"fr\">French</option>\n                <option value=\"de\">German</option>\n                <option value=\"hi\">Hindi</option>\n                <option value=\"es\">Spanish</option>\n                <option value=\"ru\">Russian</option>\n            </select>\n        </div>\n    );\n};\n\nexport default Filter;","import React from 'react';\nimport Filter from './filter';\n\nconst Searchbar = (props) => {\n    Searchbar.defaultProps = {\n        sort: \"relevance\"\n    };\n\n    return(\n        <div className=\"searchbar\">\n            <form onSubmit={props.handleSort} action=\"\">\n                <input\n                    type=\"text\"\n                    className=\"searchfield\"\n                    placeholder=\"Enter book name\"\n                    onChange={props.handleSearch}\n                />\n                <button type=\"submit\" className=\"button\">Search</button>\n                <div className=\"properties\">\n                    <Filter\n                        handleLanguageRes={props.handleLanguageRes}\n                        handleFilter={props.handleFilter}\n                        filter={props.filter}\n                        languageRestriction={props.languageRestriction}\n                    />\n                    <div className=\"sortBy\" onClick={props.handleSort}>\n                        <span className=\"label\">Sort By:</span>\n                        <button\n                            value=\"relevance\"\n                            className={ `sortButton left-button ${props.sort === \"relevance\" ? 'active': ''}` }\n                        >\n                            Relevance\n                        </button>\n                        <button\n                            value=\"newest\"\n                            className={ `sortButton right-button ${props.sort === \"newest\" ? 'active': ''}` }\n                        >\n                            Newest\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Searchbar;","const axios = require('axios');\nexport const axiosInstance = axios.create({\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    },\n    baseURL: `https://www.googleapis.com/books/v1/volumes`\n});","import React from 'react';\n\nconst BookCard = (props) => {\n    const publishedYear = !props.book.volumeInfo.hasOwnProperty('publishedDate')\n                          ? props.book.volumeInfo.publishedDate = \"0000\"\n                          : props.book.volumeInfo.publishedDate.substring(0,4);\n    const averageRating = !props.book.volumeInfo.hasOwnProperty('averageRating')\n                          ? props.book.volumeInfo.averageRating = \"1\" : props.book.volumeInfo.averageRating;\n    const thumbnail = !props.book.volumeInfo.hasOwnProperty('imageLinks')\n                      ? 1 : props.book.volumeInfo.imageLinks.thumbnail;\n\n    return(\n        <a href={props.book.accessInfo.webReaderLink}>\n            <div className=\"bookCard\">\n                <div className=\"bookCard-bookThumbnail\"><img src={thumbnail} alt={props.book.volumeInfo.title} /></div>\n                <div className=\"bookCard-bookInfo\">\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Name: </span>\n                        {props.book.volumeInfo.title}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Authors: </span>\n                        {props.book.volumeInfo.authors}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Publisher: </span>\n                        {props.book.volumeInfo.publisher}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Published Year: </span>\n                        {publishedYear}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Language: </span>\n                        {props.book.volumeInfo.language.toUpperCase()}\n                    </div>\n                    <div className=\"bookCard-bookInformation\">\n                        <span className=\"cardLabel\">Rating: </span>\n                        {averageRating}/5\n                    </div>\n                </div>\n            </div>\n        </a>\n    );\n};\n\nexport default BookCard;","import React, { Component } from 'react';\n\nclass Pagination extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageNumbers: [1, this.totalPages],\n            booksPerPage: 10,\n            totalPages: Math.ceil(props.totalBooks / 10),\n            currentPage: this.props.currentPage\n        };\n\n        this.pageNumbers = [];\n\n        if(this.state.currentPage<5) {\n            for (let i = 5; i >= 2; i--) {\n                this.state.pageNumbers.splice(1,0,i);\n            }\n        } else if( this.state.currentPage>(this.state.totalPages-5)) {\n            for (let i = this.state.totalPages-5; i >= this.state.totalPages-8; i--) {\n                this.state.pageNumbers.splice(1,0,i);\n            }\n        } else {\n            for (let i = this.state.currentPage+2; i >= this.state.currentPage-2; i--) {\n                this.state.pageNumbers.splice(1,0,i);\n            }\n        }\n\n\n        this.handlePaginationNext = this.handlePaginationNext.bind(this);\n        this.handlePaginationPrev = this.handlePaginationPrev.bind(this);\n        this.handlePageChange = this.handlePageChange.bind(this);\n    }\n\n    handlePaginationNext () {\n        this.props.onPageChange(this.state.currentPage+1);\n    }\n\n    handlePaginationPrev () {\n        this.props.onPageChange(this.state.currentPage-1);\n    }\n\n    handlePageChange (Number) {\n        this.setState({ currentPage: Number });\n        this.props.onPageChange(Number);\n    }\n\n    render() {\n        return(\n            <div className=\"pagination\">\n                <div className=\"pagination-prev\" onClick={this.handlePaginationPrev}>Prev</div>\n                <div className=\"pagination-list\">\n                    {this.state.pageNumbers.map(Number => (\n                        <div\n                            key={Number}\n                            className={ `pagination-element ${this.state.currentPage ===  Number  ? 'active': ''}` }\n                            onClick={ ()=> { this.handlePageChange(Number); } }\n                        >\n                            { Number }\n                        </div>\n                    ))}\n                </div>\n                <div className=\"pagination-next\" onClick={this.handlePaginationNext}>Next</div>\n            </div>\n        );\n    }\n}\n\nexport default Pagination;\n","/* eslint-disable react/prop-types */\nimport BookCard from './bookCard';\nimport Pagination from './pagination';\nimport React, { Component } from 'react';\n\nclass BooksList extends Component {\n    render() {\n        return(\n            <div className=\"booklistPage\">\n                <div className=\"bookslist\">\n                    {this.props.books.map((book) => {\n                        return <BookCard key={book} book={book} />;\n                    })}\n                </div>\n                { this.props.books.length ? <Pagination\n                    totalBooks={this.props.totalBooks}\n                    onPageChange={this.props.onPageChange}\n                    currentPage={this.props.currentPage}\n                /> : null}\n            </div>\n        );\n    }\n}\n\nexport default BooksList;","import React from 'react';\n\nconst LoadingSpinner = () => (\n  <div className=\"spinner\">\n    <i className=\"fa fa-spinner fa-pulse\" />\n    <p>Fetching Books...</p>\n  </div>\n);\n\nexport default LoadingSpinner;","import React, { Component } from 'react';\n\nclass Header extends Component {\n    handleRemove = () => {\n        if(this.props.handleFilter) {\n            this.props.handleFilter();\n        } else if (this.props.handleLanguageRes) {\n            this.props.handleLanguageRes();\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"chip\">\n                <div className=\"filterName\">{this.props.filter}</div>\n                <i className=\"fas fa-times-circle\" value=\"none\" onClick={this.handleRemove} />\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport Searchbar from './../components/searchbar';\nimport { getBooks } from '../api/booksApi';\nimport BooksList from '../components/booksList';\nimport LoadingSpinner from '../components/loadingSpinner';\nimport Chip from \"../components/chip\";\n\nclass LandingPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            books: [],\n            totalBooks: 0,\n            searchField: '',\n            sort: 'relevance',\n            isLoading: false,\n            filter: null,\n            languageRestriction: null,\n            startIndex: 0,\n            currentPage: 1\n        };\n    }\n\n    handleSearch = (e) => {\n        this.setState({ searchField: e.target.value });\n    }\n\n    handleSort = (e) => {\n        e.preventDefault();\n        if(e.target.value!==undefined) {\n            this.setState({ sort: e.target.value });\n        }\n        this.handleRequest();\n    }\n\n\n    handleFilter = (e) => {\n        if(e==null) {\n            this.setState({ filter: null });\n        } else if(e.target.value!==\"none\") {\n            this.setState({ filter: e.target.value });\n        } else {\n            this.setState({ filter: null });\n        }\n        this.handleRequest();\n    }\n\n    handleLanguageRes = (e) => {\n        if(e!==undefined) {\n            this.setState({ languageRestriction: e.target.value });\n        } else {\n            this.setState({ languageRestriction: null });\n        }\n        this.handleRequest();\n    }\n\n    handlePage = (currentPage) => {\n        this.setState({ startIndex: (currentPage-1)*10, currentPage: currentPage });\n        this.handleRequest();\n    }\n\n    handleRequest = () => {\n        if(this.state.searchField!=='') {\n            this.setState({ isLoading:true }, () => {\n                getBooks(this.state.searchField,\n                    this.state.sort,\n                    this.state.filter,\n                    this.state.languageRestriction,\n                    this.state.startIndex\n                )\n                .then((data) => {\n                    this.setState({ isLoading:false, books: [...data.items], totalBooks: data.totalItems });\n                })\n                .catch( err => {\n                    this.setState({ isLoading:false });\n                    alert(err);\n                });\n            });\n        } else {\n            alert(\"Please input Search Query\");\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"landing\">\n                <Searchbar\n                    searchBook={this.searchBook}\n                    handleSearch={this.handleSearch}\n                    handleSort={this.handleSort}\n                    sort={this.state.sort}\n                    filter={this.state.filter}\n                    languageRestriction={this.state.languageRestriction}\n                    handleFilter={this.handleFilter}\n                    handleLanguageRes={this.handleLanguageRes}\n                />\n                <div className=\"chipComponents\">\n                    { this.state.filter ? <Chip filter={this.state.filter} handleFilter={this.handleFilter} /> : null }\n                    { this.state.languageRestriction ? <Chip\n                        filter={this.state.languageRestriction}\n                        handleLanguageRes={this.handleLanguageRes}\n                    /> : null }\n                </div>\n                {this.state.isLoading ? <LoadingSpinner /> : <BooksList\n                    books={this.state.books}\n                    totalBooks={this.state.totalBooks}\n                    onPageChange={this.handlePage}\n                    currentPage={this.state.currentPage}\n                /> }\n            </div>\n        );\n    }\n}\n\nexport default LandingPage;","import { axiosInstance } from './axiosInstance';\n\nfunction getBooks(name, orderValue, filter, languageRestriction, startIndex) {\n    return axiosInstance.get('', {\n        params: {\n            q: name,\n            orderBy: orderValue,\n            filter,\n            langRestrict: languageRestriction,\n            startIndex\n        }\n    })\n    .then((response) => {\n        const res = JSON.parse(response.request.response);\n        return res;\n    })\n    .catch((error) => {\n        return Promise.reject(error);\n    });\n}\n\nexport {\n    getBooks\n};","import React from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport './styles/main.scss';\nimport LandingPage from './pages/landing'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}